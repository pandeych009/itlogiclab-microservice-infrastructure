version: "3.8"

services:
  ORDER_DATA_DB:
    container_name: order_postgres_db
    platform: linux/x86_64
    image: postgres:14-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_ORDER_PASSWORD
      - POSTGRES_USER=$POSTGRES_ORDER_USER_NAME
      - POSTGRES_DB=$POSTGRES_ORDER_DATABASE
    ports:
      - $POSTGRES_ORDER_NODE_PORT:$POSTGRES_ORDER_CONTAINER_PORT
    volumes:
      - type: bind
        source:  $POSTGRES_BASE_LOC/$POSTGRES_ORDER_DATA_LOC 
        target: /var/lib/postgresql/data
      - type: bind
        source: $POSTGRES_BASE_LOC/$POSTGRES_ORDER_INITIAL_SCRIPT_LOC
        target: /docker-entrypoint-initdb.d/1.sql
        volume:
          nocopy: true
      - type: bind
        source: $POSTGRES_BASE_LOC/$POSTGRES_RESTAURANT_INITIAL_SCRIPT_LOC
        target: /docker-entrypoint-initdb.d/2.sql
        volume:
          nocopy: true    
      - type: bind
        source: $POSTGRES_BASE_LOC/$POSTGRES_RESTAURANT_DATA_INITIAL_SCRIPT_LOC
        target: /docker-entrypoint-initdb.d/3.sql
        volume:
          nocopy: true 
      - type: bind
        source: $POSTGRES_BASE_LOC/$POSTGRES_CUSTOMER_INITIAL_SCRIPT_LOC
        target: /docker-entrypoint-initdb.d/4.sql
        volume:
          nocopy: true
      - type: bind
        source: $POSTGRES_BASE_LOC/$POSTGRES_CUSTOMER_DATA_INITIAL_SCRIPT_LOC
        target: /docker-entrypoint-initdb.d/5.sql
        volume:
          nocopy: true            
          